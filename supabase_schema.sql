-- 1. User Profiles Table (extra info for each user)
create table if not exists profiles (
  id uuid references auth.users not null primary key,
  username text unique,
  full_name text,
  email text,
  phone text,
  avatar text,
  join_date timestamp with time zone default now(),
  last_ip text
);

-- 2. Posts Table
create table if not exists posts (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  content text not null,
  timestamp timestamp with time zone default now(),
  flagged boolean default false,
  moderation_status text default 'pending',
  severity text,
  categories text[],
  confidence float,
  ip_address text
);

-- 3. Comments Table
create table if not exists comments (
  id bigint generated by default as identity primary key,
  post_id bigint references posts(id) on delete cascade,
  user_id uuid references auth.users not null,
  content text not null,
  timestamp timestamp with time zone default now(),
  flagged boolean default false,
  moderation_status text default 'pending',
  severity text,
  categories text[],
  confidence float,
  ip_address text
);

-- 4. Reports Table
create table if not exists reports (
  id bigint generated by default as identity primary key,
  reporter_id uuid references auth.users,
  reported_user_id uuid references auth.users,
  post_id bigint references posts(id),
  comment_id bigint references comments(id),
  reason text,
  status text default 'pending',
  created_at timestamp with time zone default now()
);

-- 5. (Optional) Training Data Table for ML Model
create table if not exists training_data (
  id bigint generated by default as identity primary key,
  text text not null,
  user_id uuid references auth.users,
  timestamp timestamp with time zone default now(),
  prediction jsonb,
  human_label text
); 

-- 6. Post Likes Table
create table if not exists post_likes (
  id bigint generated by default as identity primary key,
  post_id bigint references posts(id) on delete cascade,
  user_id uuid references auth.users not null,
  created_at timestamp with time zone default now(),
  unique (post_id, user_id)
);

-- 7. Comment Likes Table
create table if not exists comment_likes (
  id bigint generated by default as identity primary key,
  comment_id bigint references comments(id) on delete cascade,
  user_id uuid references auth.users not null,
  created_at timestamp with time zone default now(),
  unique (comment_id, user_id)
); 